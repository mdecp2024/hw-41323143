var tipuesearch = {"pages": [{'title': 'About', 'text': '國立虎尾科技大學機械設計工程系 \n National Formosa University \n Department of Mechanical Design Engineering \n cp2024 計算機程式 \n 課程教材: \n Learn Python with Jupyter  ( site ,  ebook ) \n 教育版帳號\xa0microsoftonline 登入點:\xa0 https://login.microsoftonline.com/ \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入  https://login.microsoftonline.com/  Office 365 \n Teams 團隊代碼:  ldodwua \n 個人倉儲: https://github.com/mdecp2024/hw-41323143 \n 個人網站: https://mdecp2024.github.io/hw-41323143/content/index.html \n 其他資訊: \n cd2023_pj3ag4_zmq_football_4.7.7z \n cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z \n', 'tags': '', 'url': 'About.html'}, {'title': 'Attendance', 'text': '出席 (10%) - 自行舉證評分 \n 自行利用 Github commits 提交記錄評分. \n', 'tags': '', 'url': 'Attendance.html'}, {'title': 'HW 1', 'text': '主題: 基於瀏覽器的分散式版次管理與整合程式開發環境 (10%) \n USB 隨身碟: \n 下載  python_2025_lite.7z  (428 MB, 解開壓縮後約 1.5 GB) \n Jupyter \n What are Github and Codespaces? \n Hello World - GitHub Docs \n 利用包含學號的字串作為帳號, 申請免費使用 Github. \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 1 \n \n PART 1: Creating the basics 資料整理 (10%) \n 啟動可攜程式系統後, 在命令列中: \n y:\\>cd notebook \n y:\\notebook>jupyter lab --collaborative \n 進入  01_string_input_print.ipynb  練習如何修改 PART1 notebook 後存檔, 上傳至作業倉儲中的 downloads 目錄後, 透過  https://nbviewer.org/  將已經提交的  01_string_input_print.ipynb , 嵌入下列網頁中. \n \n 上列 iframe 標註的 html 語法: \n <iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"></iframe> \n 完成上述流程整理後, 請將 HW1 自評分數輸入 cp2024 自評表單中. \n \n', 'tags': '', 'url': 'HW 1.html'}, {'title': 'HW 1 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 Topic 1 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 1 Exam.html'}, {'title': 'w7', 'text': '\n \n \n', 'tags': '', 'url': 'w7.html'}, {'title': 'w9', 'text': "#help(range)\nfor i in range(1,5):\n    print(i)\ndef print_pyramid(n):\n    for i in range(n):\n        # 打印空格\n        print(' ' * (n - i - 1), end='')\n        # 打印星號\n        print('*' * (2 * i + 1))\n\n# 設定金字塔的高度\nheight = 5\nprint_pyramid(height)\n \n 1\n2\n3\n4\n    *\n   ***\n  *****\n *******\n*********\n>Exit code: 0 \n   \n", 'tags': '', 'url': 'w9.html'}, {'title': 'w10', 'text': '\n \n \n \n 變數名稱不能使用關鍵字 ： 關鍵字（Keywords）是 Python 保留用來表示特定語法的詞，不能用來當作變數名稱。例如， for 、 while 、 if  等詞語具有特定的功能，無法用作變數名稱。 \n \n \n 變數名稱區分大小寫 ： Python 的變數名稱是大小寫敏感的， age  和  Age  會被視為兩個不同的變數名稱。這意味著在命名變數時需小心，以避免因大小寫不同而造成混淆。 \n \n \n 遵循 PEP 8 命名規範 ： \n \n 一般變數和函數名稱應使用 小寫字母 ，並用底線  _  分隔多個單字（例如： user_name ）。 \n 常數（固定不變的值）名稱通常使用 大寫字母 ，並用底線  _  分隔（例如： MAX_LIMIT ）。 \n 類別名稱則使用駝峰命名法（CamelCase），即首字母和每個新單字的首字母大寫（例如： StudentInfo ）。 \n \n \n \n 避免覆蓋內建函數名稱 ： Python 有許多內建函數和物件名稱，如  print 、 sum 、 list  等，這些名稱具有特定的功能。如果使用相同名稱定義變數，會覆蓋這些內建功能，造成程式錯誤或意料之外的行為。例如，如果將變數命名為  print ，則內建的  print()  函數會被覆蓋，之後的  print()  將無法正常使用。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n \n \xa0 \n \n \xa0心得:讓我更熟悉了 \n \n \n', 'tags': '', 'url': 'w10.html'}, {'title': 'w11_hw', 'text': '1.\xa0 已知可以用 Python 程式 由上往下列印三角形 * , 或 由左往右列印三角形 * , 請將此程式延伸到可以在 10x10 的字元區域中, 以 "*" 字元列印出圓型區域. 完成後請將程式碼存入個人 Gist 後, 直接在個人作業網站中的 Brython 頁面中執行. (提示: ?src=gist_script_URL) \n 第一題:  以 "*" 字元列印出圓型區域 \n # 設定圓心與半徑\nh, k = 5, 5  # 圓心位置 (5, 5)\nr = 4         # 圓的半徑\n\n# 10x10 的字元區域\nfor y in range(1, 11):  # y 軸從 1 到 10\n    line = ""\n    for x in range(1, 11):  # x 軸從 1 到 10\n        # 計算該點 (x, y) 到圓心的距離\n        distance = ((x - h) ** 2 + (y - k) ** 2) ** 0.5\n        # 如果距離小於或等於半徑，則打印 "*"，以形成實心圓形\n        if distance <= r:\n            line += "＊"  # 使用全形星號\n        else:\n            line += "\u3000"  # 使用全形空格\n    print(line)\n \n \n 2. 已知可以在網頁中利用 Brython 繪製方格與塗色, 如下連結, 請設法修改此一程式, 直接將程式存入個人的 Gist, 並利用黑色方塊圍出一個圓形區域. \n 第二題: 網頁上的方格與塗色 \n \n from browser import html\nfrom browser import document as doc\nimport math\n\n# Create canvas element\ncanvas = html.CANVAS(width=400, height=400)\nbrython_div = doc["brython_div1"]\nbrython_div <= canvas\n\n# Each grid square\'s pixel size\ngs = 20\nradius = 5  # Set the radius of the circle\ncx, cy = 5, 5  # Set the center of the circle (in grid coordinates)\n\n# Get the drawing context\nctx = canvas.getContext("2d")\n\ndef dRect(lux, luy, w, h, s=1, c=\'#ff0000\'):\n    ctx.lineWidth = s\n    ctx.strokeStyle = c\n    ctx.beginPath()\n    ctx.rect(lux, luy, w, h)\n    ctx.stroke()\n\ndef grid(width, height, grid_pix):\n    # Create grid with width x height number of grid cells\n    for i in range(width):\n        for j in range(height):\n            dRect(i * grid_pix, j * grid_pix, grid_pix, grid_pix, 1, "lightgrey")\n\ndef fill(x, y, color):\n    # Fill the grid cell with the specified color\n    ctx.fillStyle = color\n    ctx.fillRect(x - 1, y - 1, gs, gs)\n\ndef draw_filled_circle(radius, cx, cy):\n    # Create a filled circle using grid squares\n    for i in range(10):  # Iterate over the grid width (10 squares)\n        for j in range(10):  # Iterate over the grid height (10 squares)\n            # Calculate the center of the current grid square\n            center_x = i + 0.5\n            center_y = j + 0.5\n            # Check if this grid square falls inside the circle\n            if (center_x - cx) ** 2 + (center_y - cy) ** 2 <= radius ** 2:\n                fill(i * gs, j * gs, "black")  # Fill with black\n\n# Draw the grid\ngrid(10, 10, 20)\n\n# Draw a filled circle at the center (cx, cy) with the specified radius\ndraw_filled_circle(radius, cx, cy)\n \n \n 3. 完成上列題目後, 請利用 Youtube 影片 簡報 個人的解題過程與心得. \n 說明: 顯示提示訊息  「你叫啥」, 等待使用者輸入,將使用者輸入的內容（字串形式）傳回。 input()範例程式： 你叫啥 第一題: input()與 print()', 'tags': '', 'url': 'w11_hw.html'}, {'title': 'w12_hw', 'text': '1. 請各組組員分別利用 \xa0 Brython 以及 Jupyter lab \xa0 環境, 執行 可攜程式 \xa0 notebook 目錄中的 \xa0 01_string_input_print.ipynb 至\xa010_for_search.ipynb \xa0 筆記本程式, 完成後請將能在 Brython 執行的程式碼存入個人 \xa0 Gist \xa0 後, 將各程式執行連結放入 w12_hw 網頁上. 最後請說明各範例中所使用的程式語法以及執行心得. \n 第一題: input與 print \n \xa0 input範例程式： 你叫啥 \n \xa0 說明: 顯示提示訊息 「你叫啥」,等待使用者輸入,將使用者輸入的內容（字串形式）傳回。\xa0 \n input("你叫啥 ") \n print 範例程式： 貓咪 \n 說明： print()  函式： \n 用來在終端（或控制台）中顯示內容。 \n 每行的內容由雙引號（或單引號）包裹。 \n 每行的內容解析： print(" /\\_/\\ ") ： 顯示貓耳朵和頭部的上半部分： /\\_/\\ 。 \n print(" >^.^< ") ： 顯示貓咪的臉部： >^.^< 。 \n print(" / \\\\ ") ： 顯示貓咪的身體底部和爪子的形狀： / \\ 。 注意：這裡的  \\\\  是為了顯示單個反斜槓  \\ ，因為\xa0 反斜槓在 Python 中是特殊字符（用於轉義）。 \n print(" (___)___") ： 顯示貓咪的身體和尾巴的樣式。 \n print (" /\\_/\\   ")\nprint (" >^.^<   ")\nprint ("  / \\    ")\nprint (" (___)___") \n \n 第二題:variables \n 2-1範例: 名字 \n 說明:這段程式碼定義兩個字串變數  first_name  和  last_name ，分別儲存名字和姓氏，然後用  print()  函式輸出這些值。 \n first_name = "Fernando"  # 定義變數 first_name，內容是字串 "Fernando"\nlast_name  = "Pérez"     # 定義變數 last_name，內容是字串 "Pérez"\nprint(first_name)        # 將變數 first_name 的內容輸出到終端\nprint(last_name)         # 將變數 last_name 的內容輸出到終端 \n 2-2範例: 名子+喜歡的食物 \n 說明:一個簡單的互動式程式，功能是詢問使用者名字和最喜歡的食物，然後輸出相關訊息。 \n name = input("What\'s your name? ")  # 提示使用者輸入名字\nfavorite_food = input("What is your favorite food? ")  # 提示使用者輸入最喜歡的食物\n\nprint("Hi! My name is " + name)  # 顯示名字\nprint("My favorite food is " + favorite_food)  # 顯示最喜歡的食物\nprint(name + "\'s favorite food is " + favorite_food)  # 顯示完整句子\n \n \xa0第三題:list_if_in_else \n 範例: 購買書籍 \n 說明:程式碼會顯示一個書籍清單，然後詢問使用者想購買的書籍。如果使用者選擇的書籍在清單中，程式會顯示「有售」，否則顯示「無售」。 \n programming_books = ["Learn python", "Python for all", "Intro to python"]  # 定義書籍清單\nprint(programming_books)  # 顯示可選擇的書籍\n\nwanted_book = input("Hi! What book would you like to buy?")  # 提示使用者輸入想購買的書籍名稱\nprint(wanted_book)  # 顯示使用者輸入的書籍名稱\n\n# 判斷書籍是否在可購買清單中\nif wanted_book in programming_books:\n    print("Yes, we sell it!")  # 書籍在清單中，顯示有售\nelse:\n    print("Sorry, we don\'t sell that book")  # 書籍不在清單中，顯示無售 \n 第四題:list_append_remove \n 範例: 購物清單 \n 說明:顯示目前的購物清單,提示使用者輸入想要新增的項目。 \n 如果該項目已經在清單中，顯示已存在；如果沒有，將其添加到清單中,提示使用者輸入要刪除的項目。 \n 如果該項目存在於清單中，就將其刪除，並顯示更新後的清單。如果該項目不在清單中，顯示錯誤訊息。 \n shopping_list = ["carrots", "chocolate", "olives"]  # 初始購物清單\nprint(shopping_list)  # 顯示當前購物清單\n\nnew_item = input("What else do I have to buy?")  # 提示使用者輸入想買的物品\n\n# 檢查新項目是否已在清單中\nif new_item in shopping_list:\n    print(new_item + " is/are already in the shopping list")  # 如果已有此項目，顯示提示\n    print(shopping_list)  # 顯示目前的清單\nelse:\n    shopping_list.append(new_item)  # 否則將新項目加入清單\n    print(shopping_list)  # 顯示更新後的清單\n\nitem_to_remove = input("What do I have to remove?")  # 提示使用者輸入要刪除的物品\n\n# 檢查要刪除的項目是否在清單中\nif item_to_remove in shopping_list:\n    shopping_list.remove(item_to_remove)  # 如果在清單中，將其刪除\n    print(shopping_list)  # 顯示更新後的清單\nelse:\n    print(item_to_remove + " is/are not in the list")  # 如果不在清單中，顯示錯誤訊息\n    print(shopping_list)  # 顯示未變動的清單\n \n \n', 'tags': '', 'url': 'w12_hw.html'}, {'title': 'HW 2', 'text': '主題: Python 的數列、判斷式與重複迴圈 (20%) \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 2 and Part 3 \n \n 延續 HW 1 網頁資料整理與程式練習方法, 整理下列內容 (20%): \n PART 2: Introduction to lists and if/else statements \n PART 3: Introduction to the for loop \n 完成上述流程整理後, 請將 HW2 自評分數輸入 cp2024 自評表單中. \n \xa0\xa0 \n', 'tags': '', 'url': 'HW 2.html'}, {'title': 'HW 2 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n \xa0 \xa0 \xa0 \xa0 \n \xa0 \xa0 \n', 'tags': '', 'url': 'HW 2 Exam.html'}, {'title': 'HW 3', 'text': '主題: Python 的數字、演算法與迴圈 (20%) \n Python 課程教材:  https://www.learnpythonwithjupyter.com/  - PART 4 and Part 5 \n 完成上述流程整理後, 請將 HW3 自評分數輸入 cp2024 自評表單中. \n \n', 'tags': '', 'url': 'HW 3.html'}, {'title': 'HW 3 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 3 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 3 Exam.html'}, {'title': 'HW 4', 'text': '主題: 利用 Python 控制機電模擬系統 (20%) \n 利用\xa0 https://solvespace.com/ \xa0建立機械系統零組件 \n 利用  CoppeliaSim  建立機電模擬系統 \n 利用  Python  跨網路控制瀏覽器上的機電模擬系統 \n 範例: \n cd2023_pj3ag4_zmq_football_4.7.7z \n cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z \n 完成上述流程整理後, 請將 HW4 自評分數輸入 cp2024 自評表單中. \n \xa0 \xa0\xa0 \n', 'tags': '', 'url': 'HW 4.html'}, {'title': 'HW 4 Exam', 'text': '每六人為一組進行協同程式練習 \n 透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 4 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯. \n', 'tags': '', 'url': 'HW 4 Exam.html'}, {'title': 'Final Report', 'text': '期末口頭與書面專題報告 (20%) \n 期末口頭專題報告影片: \n ...... \n 期末書面專題報告檔案 (pdf): \n ...... \n 電腦輔助設計與實習課程總結心得: \n ...... \n 期末報告自評成績: \n 完成上述流程後, 請將 Final Report 自評分數輸入 cp2024 自評表單中. \n \xa0\xa0 \n', 'tags': '', 'url': 'Final Report.html'}, {'title': 'Brython', 'text': '從 1 累加到 100: \n 1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束  \n \n  ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n \n', 'tags': '', 'url': 'Brython.html'}]};